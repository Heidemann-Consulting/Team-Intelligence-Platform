# File: ulacm_frontend/nginx.conf
# Updated for HTTPS on port 443 and redirect from HTTP

# HTTP server block to redirect to HTTPS
server {
  listen 80;
  server_name localhost; # Or your domain if applicable

  # Redirect all HTTP requests to HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# HTTPS server block
server {
  listen 443 ssl;
  server_name localhost; # Or your domain if applicable

  # SSL Certificate paths (ensure these match the volume mounts in docker-compose.yml)
  ssl_certificate /etc/nginx/ssl/cert.pem;
  ssl_certificate_key /etc/nginx/ssl/key.pem;

  # SSL protocols and ciphers (optional, for better security)
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;
  # Example ciphers, consult current best practices
  # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

  root /usr/share/nginx/html;
  index index.html index.htm;

  # Handle SPA routing: Try files, then fallback to index.html
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Proxy API requests to the backend service
  # Using HTTPS for the backend now, assuming backend runs on 8443 for SSL
  location /api/ {
    proxy_pass https://backend:8443/api/; # Ensure backend service name and HTTPS port match

    # Standard proxy headers (important for backend to know original request info)
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme; # Scheme will be 'https'

    # Optional: Increase timeouts if needed
    proxy_connect_timeout 300s;
    proxy_send_timeout    300s;
    proxy_read_timeout    300s;
  }

  # Optional: Add error pages or other specific configs if needed
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
        root /usr/share/nginx/html;
  }
}
